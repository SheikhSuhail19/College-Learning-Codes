#include <iostream>
using namespace std;

class Complex{
    private:
        int real, img;
    public:
        Complex(){
            this->real = 0;
            this->img = 0;
        }
        Complex(int r, int i){
            this->real = r;
            this->img = i;
        }
        Complex operator+(const Complex &obj){
        Complex temp;
        temp.img = this->img + obj.img;
        temp.real = this->real + obj.real;
        return temp;
  }
        void display(){
        cout << this->real << " + " << this->img << "i" << endl;
  }
};



int main()
{
    
    Complex c1(20,30), c2(30,20), c;
    c = c1 + c2;
    c.display();
    return 0;
}













// C++ program to demonstrate the working of friend function

#include <iostream>
using namespace std;

class Distance {
    private:
        int meter;
        
        // friend function
        friend int addFive(Distance);

    public:
        Distance() : meter(0) {}
        
};

// friend function definition
int addFive(Distance d) {

    //accessing private members from the friend function
    d.meter += 5;
    return d.meter;
}

int main() {
    Distance D;
    cout << "Distance: " << addFive(D);
    return 0;
}